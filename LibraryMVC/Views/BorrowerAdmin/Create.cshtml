@model Library.Models.Borrower

@{
    ViewData["Title"] = "Create";
}
<div class="h">
    <h1>Inserting New Borrower Details</h1>
</div>
<hr />
<div class="row">
    <div class="col-md-4" style="background-color:#c0eaf8">
        <form asp-action="Create" onsubmit="return validateForm()" style="padding:10px 10px">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" required />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="EmpId" class="control-label"></label>
                <input asp-for="EmpId" class="form-control" required />
                <span asp-validation-for="EmpId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Department" class="control-label"></label>
                <input asp-for="Department" class="form-control" required />
                <span asp-validation-for="Department" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="BorrowerType" class="control-label"></label>
                <!--<input asp-for="BorrowerType" class="form-control" />-->
                <select asp-for="BorrowerType" class="form-control">
                    <option value="Admin">Admin</option>
                    <option value="User">User</option>
                </select>
                <span asp-validation-for="BorrowerType" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" required />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            @if (!string.IsNullOrEmpty(ViewData["ErrorMessage"] as string))
            {
                <p class="error-message">@ViewData["ErrorMessage"]</p>
            }
            <div class="form-group">
                <label asp-for="Password" class="control-label"></label>
                <input id="Password" asp-for="Password" class="form-control" type="password" required />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">Confirm Password</label>
                <input id="ConfirmPassword" class="form-control" type="password" required />
                <span class="text-danger"></span>
            </div>
            <div id="confirmPasswordError" class="text-danger"></div>
            <br />
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
        <script>
            function validateForm() {
                var password = document.getElementById("Password").value;
                var confirmPassword = document.getElementById("ConfirmPassword").value;
                var confirmPasswordError = document.getElementById("confirmPasswordError");

                if (password !== confirmPassword) {
                    confirmPasswordError.textContent = "Passwords do not match";
                    return false;
                } else if (password.length < 6) {
                    confirmPasswordError.textContent = "Password must be at least 6 characters long";
                    return false;
                } else if (!isStrongPassword(password)) {
                    confirmPasswordError.textContent = "Password must contain at least one uppercase letter, one number, and one special character";
                    return false;
                } else {
                    confirmPasswordError.textContent = "";
                    return true;
                }
            }
            function isStrongPassword(password) {
                var capital = /[A-Z]/;
                var number = /[0-9]/;
                var symbol = /[^A-Za-z0-9]/;

                return capital.test(password) && number.test(password) && symbol.test(password);
            }
        </script>
    </div>
</div>

<div>
    <br />
    <a asp-action="Index" class = "others">Back to List</a>
</div>

